plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
    id 'jacoco'
}

jacoco {
    toolVersion = "0.8.7"
}

tasks.withType(Test) {
    jacoco {
        includeNoLocationClasses = true
        excludes = ['jdk.internal.*']
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    group = "reporting"
    description = "genrate jacoco report"
    reports {
        xml.enabled = true
        html.enabled = true
        html.destination = file("$project.buildDir/jacoco/")
        xml.destination = file("$project.buildDir/jacoco/jacoco.xml")
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      '**/*Application*.*',
                      '**/*Activity*.*',
                      '**/*Fragment*.*',
                      '**/delegates/*.*',
                      '**/*Adapter*.*',
                      'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: project.buildDir, includes: ['**/testDebugUnitTest.exec'])
}

def globalConf = rootProject.ext

android {
    compileSdk androidTargetSdkVersion

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.ravish.android.clean.architecture.kotlin"
        minSdk globalConf.androidMinSdkVersion
        targetSdk globalConf.androidTargetSdkVersion
        versionCode 1
        versionName globalConf.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            testCoverageEnabled true
            debuggable true
            minifyEnabled false
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

kapt {
    generateStubs = true
}

dependencies {

    implementation project(':domain')
    implementation project(':data')

    implementation(deps.androidxCore)
    implementation(deps.appCompatKtx)
    implementation(deps.androidMaterial)
    implementation(deps.androidConstraintLayout)
    implementation(deps.navGraphFragment)
    implementation(deps.navGraphUI)
    implementation(deps.androidLifecycle)
    implementation(deps.networkingLib)

    kapt(deps.hiltCompiler)
    implementation(deps.hilt)

    implementation(deps.retrofit)
    implementation(deps.retrofitConverterGson)
    implementation(deps.okhttp)
    implementation(deps.okhttpLogging)
    implementation(deps.glide)
    
    testImplementation(deps.jUnit)
    androidTestImplementation(deps.testRunner)
    androidTestImplementation(deps.androidTestJUnit)
    androidTestImplementation(deps.androidTestEspresso)
}